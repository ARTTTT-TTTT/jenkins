pipeline {
    agent any
    
    tools {
        // If you have Docker configured as a tool in Jenkins
        // docker 'docker-latest'
    }
    
    environment {
        DOCKER_IMAGE = 'jenkins-demo-app'
        DOCKER_TAG = 'latest'
        CONTAINER_NAME = 'demo-app'
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build Image') {
            steps {
                script {
                    // Build the Docker image
                    sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} ."
                }
            }
        }
        
        stage('Stop Previous Container') {
            steps {
                script {
                    // Stop and remove previous container if it exists
                    sh """
                        docker stop ${CONTAINER_NAME} || true
                        docker rm ${CONTAINER_NAME} || true
                    """
                }
            }
        }
        
        stage('Run Container') {
            steps {
                script {
                    // Run the new container
                    sh "docker run -d -p 5000:5000 --name ${CONTAINER_NAME} ${DOCKER_IMAGE}:${DOCKER_TAG}"
                }
            }
        }
        
        stage('Verify Deployment') {
            steps {
                script {
                    // Wait a bit for the container to start
                    sleep 10
                    // Check if container is running
                    sh "docker ps | grep ${CONTAINER_NAME}"
                }
            }
        }
    }
    
    post {
        always {
            // Clean up: remove dangling images
            sh 'docker image prune -f || true'
        }
        failure {
            // On failure, show container logs
            sh "docker logs ${CONTAINER_NAME} || true"
        }
    }
}
